
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int DIVIDE = 8;
  public static final int KW_FALSE = 21;
  public static final int OPEN_ROUND_BRACES = 30;
  public static final int KW_INT = 23;
  public static final int CLOSE_ROUND_BRACES = 31;
  public static final int SUBTRACT = 6;
  public static final int NOT_EQUAL = 16;
  public static final int INT = 3;
  public static final int GREATER_THAN = 10;
  public static final int NOT = 17;
  public static final int AND = 18;
  public static final int OR = 19;
  public static final int COMMA = 34;
  public static final int MULTIPLY = 7;
  public static final int ASSIGN = 15;
  public static final int ID = 2;
  public static final int KW_RETURN = 29;
  public static final int EOF = 0;
  public static final int EQUAL = 14;
  public static final int GREATER_EQUAL = 12;
  public static final int error = 1;
  public static final int SEMI_COLON = 35;
  public static final int KW_BOOLEAN = 22;
  public static final int ADD = 5;
  public static final int KW_TRUE = 20;
  public static final int KW_IF = 25;
  public static final int KW_VOID = 24;
  public static final int KW_BREAK = 28;
  public static final int OPEN_CURLY_BRACES = 32;
  public static final int KW_ELSE = 26;
  public static final int MODULUS = 9;
  public static final int CLOSE_CURLY_BRACES = 33;
  public static final int LESSER_EQUAL = 13;
  public static final int STRING = 4;
  public static final int KW_WHILE = 27;
  public static final int LESSER_THAN = 11;
  public static final String[] terminalNames = new String[] {
  "EOF",
  "error",
  "ID",
  "INT",
  "STRING",
  "ADD",
  "SUBTRACT",
  "MULTIPLY",
  "DIVIDE",
  "MODULUS",
  "GREATER_THAN",
  "LESSER_THAN",
  "GREATER_EQUAL",
  "LESSER_EQUAL",
  "EQUAL",
  "ASSIGN",
  "NOT_EQUAL",
  "NOT",
  "AND",
  "OR",
  "KW_TRUE",
  "KW_FALSE",
  "KW_BOOLEAN",
  "KW_INT",
  "KW_VOID",
  "KW_IF",
  "KW_ELSE",
  "KW_WHILE",
  "KW_BREAK",
  "KW_RETURN",
  "OPEN_ROUND_BRACES",
  "CLOSE_ROUND_BRACES",
  "OPEN_CURLY_BRACES",
  "CLOSE_CURLY_BRACES",
  "COMMA",
  "SEMI_COLON"
  };
}

